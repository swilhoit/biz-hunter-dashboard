{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(npx playwright:*)",
      "Bash(mkdir:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run lint)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(npx supabase:*)",
      "Bash(chmod:*)",
      "Bash(rm:*)",
      "Bash(./start-scraper.sh:*)",
      "Bash(ls:*)",
      "Bash(npm run build:*)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(node:*)",
      "Bash(npm run scrape:*)",
      "Bash(grep:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(claude mcp:*)",
      "Bash(supabase migration:*)",
      "Bash(supabase db:*)",
      "Bash(echo:*)",
      "Bash(npx tsc:*)",
      "mcp__supabase__list_tables",
      "mcp__supabase__execute_sql",
      "mcp__supabase__apply_migration",
      "mcp__supabase__get_project_url",
      "mcp__supabase__get_anon_key",
      "mcp__supabase__list_migrations",
      "mcp__supabase__search_docs",
      "Bash(./run-sql-direct.sh)",
      "Bash(psql:*)",
      "WebFetch(domain:www.bizbuysell.com)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(heroku login:*)",
      "Bash(railway login:*)",
      "Bash(railway auth:*)",
      "Bash(railway:*)",
      "Bash(npm run:*)",
      "Bash(npx tsx:*)",
      "Bash(npm run scraping-api:dev:*)",
      "mcp__supabase__get_advisors",
      "Bash(jq:*)",
      "WebFetch(domain:quietlight.com)",
      "Bash(true)",
      "Bash(git checkout:*)",
      "WebFetch(domain:centurica.com)",
      "WebFetch(domain:app.centurica.com)",
      "mcp__supabase__list_branches",
      "mcp__supabase__create_branch",
      "Bash(VITE_SUPABASE_URL=https://ueemtnohgkovwzodzxdr.supabase.co VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk tsx src/services/scraping/test-scrapers.ts centurica)",
      "Bash(VITE_SUPABASE_URL=https://ueemtnohgkovwzodzxdr.supabase.co VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk npx tsx src/services/scraping/test-scrapers.ts centurica)",
      "mcp__supabase__get_logs",
      "Bash(npx @smithery/cli list:*)",
      "Bash(npx @smithery/cli install @modelcontextprotocol/server-puppeteer)",
      "Bash(npx @smithery/cli install @modelcontextprotocol/server-puppeteer --client claude)",
      "WebFetch(domain:github.com)",
      "Bash(npm search:*)",
      "Bash(supabase projects:*)",
      "Bash(supabase status:*)",
      "Bash(supabase inspect:*)",
      "Bash(npx ts-node:*)",
      "Bash(cp:*)",
      "Bash(./setup-mosaic-frontend.sh:*)",
      "Bash(./finalize-integration.sh:*)",
      "Bash(gcloud:*)",
      "Bash(timeout 10 npm run dev)",
      "Bash(cat:*)",
      "mcp__ide__getDiagnostics",
      "Bash(git rm:*)",
      "Bash(git reset:*)",
      "Bash(git config:*)",
      "Bash(timeout:*)",
      "Bash(open test-button-integration.html)",
      "Bash(touch:*)",
      "Bash(mv:*)",
      "Bash(npx eslint:*)",
      "mcp__ide__executeCode",
      "Bash(supabase:*)",
      "Bash(env)",
      "Bash(brew upgrade:*)",
      "Bash(npm uninstall:*)",
      "Bash(kill:*)",
      "Bash(python3:*)",
      "Bash(git pull:*)",
      "WebFetch(domain:railway.com)",
      "WebFetch(domain:docs.railway.com)",
      "Bash(grep -n -B5 -A20 \"saveToDB\\|saveListingsToDB\" server/index.js)",
      "Bash(sed:*)",
      "WebFetch(domain:fbahunter.up.railway.app)",
      "Bash(git check-ignore:*)",
      "mcp__supabase__list_extensions",
      "Bash(brew tap:*)",
      "Bash(brew install:*)",
      "Bash(render login)",
      "Bash(render services list)",
      "Bash(render services:*)",
      "Bash(npm ls:*)",
      "Bash(test:*)",
      "Bash(npm cache clean:*)",
      "Bash(./scripts/auto-setup-google-ads.sh:*)",
      "Bash(open:*)",
      "Bash(ps:*)",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\nsupabase\n  .from(''deal_documents'')\n  .select(''*'')\n  .order(''uploaded_at'', { ascending: false })\n  .limit(5)\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''Error:'', error);\n    } else {\n      console.log(''Recent uploads:'', JSON.stringify(data, null, 2));\n    }\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\nsupabase\n  .rpc(''insert_deal_document'', {\n    p_deal_id: ''66505930-39ed-4caf-ae0b-4a3ea1cc2b49'',\n    p_file_name: ''test.txt'',\n    p_file_path: ''test/test.txt'',\n    p_file_size: 100,\n    p_mime_type: ''text/plain'',\n    p_document_type: ''test'',\n    p_description: ''test file''\n  })\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''RPC Error:'', error);\n    } else {\n      console.log(''RPC Success:'', data);\n    }\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\nsupabase\n  .rpc(''insert_deal_document'', {\n    p_deal_id: ''66505930-39ed-4caf-ae0b-4a3ea1cc2b49'',\n    p_file_name: ''test.txt'',\n    p_file_path: ''test/test.txt'',\n    p_file_size: 100,\n    p_mime_type: ''text/plain'',\n    p_document_type: ''test'',\n    p_description: ''test file'',\n    p_uploaded_by: ''00000000-0000-0000-0000-000000000001''\n  })\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''RPC Error:'', error);\n    } else {\n      console.log(''RPC Success:'', data);\n    }\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\n// Try to insert directly to test RLS\nsupabase\n  .from(''deal_documents'')\n  .insert({\n    deal_id: ''66505930-39ed-4caf-ae0b-4a3ea1cc2b49'',\n    file_name: ''test.txt'',\n    file_path: ''test/test.txt'',\n    file_size: 100,\n    mime_type: ''text/plain'',\n    document_type: ''test'',\n    description: ''test file''\n  })\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''Direct Insert Error:'', error);\n    } else {\n      console.log(''Direct Insert Success:'', data);\n    }\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\n// List all functions to see if insert_deal_document exists\nsupabase\n  .from(''pg_proc'')\n  .select(''proname'')\n  .ilike(''proname'', ''%insert_deal_document%'')\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''Function check error:'', error);\n    } else {\n      console.log(''Functions found:'', data);\n    }\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\nconst functionSql = \\`-- Quick fix for deal_documents RLS issues\n-- Create an RPC function that can insert documents with proper security\n\n-- 1. Create RPC function to insert deal documents (bypasses RLS when called from server)\nCREATE OR REPLACE FUNCTION insert_deal_document(\n    p_deal_id UUID,\n    p_file_name TEXT,\n    p_file_path TEXT,\n    p_file_size BIGINT,\n    p_mime_type TEXT,\n    p_document_type TEXT,\n    p_description TEXT,\n    p_uploaded_by UUID\n)\nRETURNS JSON\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n    result_record deal_documents;\n    deal_owner UUID;\nBEGIN\n    -- Check if the user has access to this deal\n    SELECT user_id INTO deal_owner \n    FROM deals \n    WHERE id = p_deal_id;\n    \n    IF deal_owner IS NULL THEN\n        RAISE EXCEPTION ''Deal not found'';\n    END IF;\n    \n    -- For now, allow all authenticated users to upload (we can tighten this later)\n    IF p_uploaded_by IS NULL THEN\n        RAISE EXCEPTION ''User must be authenticated'';\n    END IF;\n    \n    -- Insert the document record\n    INSERT INTO deal_documents (\n        deal_id,\n        file_name,\n        file_path,\n        file_size,\n        mime_type,\n        document_type,\n        description,\n        uploaded_by\n    ) VALUES (\n        p_deal_id,\n        p_file_name,\n        p_file_path,\n        p_file_size,\n        p_mime_type,\n        p_document_type,\n        p_description,\n        p_uploaded_by\n    ) RETURNING * INTO result_record;\n    \n    -- Return the created record as JSON\n    RETURN row_to_json(result_record);\nEND;\n$$;\n\n-- 2. Grant execute permission to authenticated users\nGRANT EXECUTE ON FUNCTION insert_deal_document(UUID, TEXT, TEXT, BIGINT, TEXT, TEXT, TEXT, UUID) TO authenticated;\n\n-- 3. Also grant to anon role for server-side operations\nGRANT EXECUTE ON FUNCTION insert_deal_document(UUID, TEXT, TEXT, BIGINT, TEXT, TEXT, TEXT, UUID) TO anon;\\`;\n\n// Execute the SQL to create the function\nsupabase.rpc(''exec_sql'', { sql: functionSql })\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''SQL execution error:'', error);\n    } else {\n      console.log(''Function created successfully:'', data);\n    }\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\nsupabase\n  .from(''deal_documents'')\n  .select(''*'')\n  .eq(''deal_id'', ''66505930-39ed-4caf-ae0b-4a3ea1cc2b49'')\n  .order(''uploaded_at'', { ascending: false })\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''Error:'', error);\n    } else {\n      console.log(''Files in database:'', data?.length || 0);\n      if (data?.length > 0) {\n        console.log(''Sample files:'');\n        data.slice(0, 3).forEach(file => {\n          console.log(''- '' + file.file_name + '' (ID: '' + file.id + '')'');\n        });\n      }\n    }\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\n// Test if we can see any deal_documents at all\nsupabase\n  .from(''deal_documents'')\n  .select(''*'')\n  .limit(1)\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''RLS blocking read access:'', error);\n    } else {\n      console.log(''Can read deal_documents table. Count:'', data?.length || 0);\n    }\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\nconsole.log(''Testing database connectivity and exploring schema...'');\n\n// Test basic database connectivity\nsupabase\n  .from(''deals'')\n  .select(''id, user_id'')\n  .eq(''id'', ''66505930-39ed-4caf-ae0b-4a3ea1cc2b49'')\n  .limit(1)\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''Error accessing deals table:'', error);\n    } else {\n      console.log(''Deal found:'', data);\n      \n      // Test if deal_documents table exists and what we can access\n      return supabase\n        .from(''deal_documents'')\n        .select(''*'')\n        .limit(1);\n    }\n  })\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''Error accessing deal_documents table:'', error);\n    } else {\n      console.log(''Can access deal_documents table. Sample count:'', data?.length || 0);\n    }\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\nconsole.log(''=== COMPREHENSIVE DATABASE TEST ==='');\n\n// Test 1: Check if we can see ANY records in deal_documents\nconsole.log(''1. Testing basic table access...'');\nsupabase\n  .from(''deal_documents'')\n  .select(''id, deal_id, file_name, uploaded_at, uploaded_by'')\n  .order(''uploaded_at'', { ascending: false })\n  .limit(10)\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''❌ Cannot access deal_documents table:'', error);\n    } else {\n      console.log(''✅ Can access deal_documents table'');\n      console.log(''Total records visible:'', data?.length || 0);\n      if (data && data.length > 0) {\n        console.log(''Sample records:'');\n        data.forEach((record, i) => {\n          console.log(\\`  ${i+1}. ${record.file_name} (Deal: ${record.deal_id?.slice(0,8)}..., User: ${record.uploaded_by?.slice(0,8)}...)\\`);\n        });\n      }\n    }\n    \n    // Test 2: Check specific deal\n    console.log(''\\n2. Testing specific deal access...'');\n    return supabase\n      .from(''deal_documents'')\n      .select(''*'')\n      .eq(''deal_id'', ''66505930-39ed-4caf-ae0b-4a3ea1cc2b49'');\n  })\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''❌ Cannot access deal-specific documents:'', error);\n    } else {\n      console.log(''✅ Deal-specific query successful'');\n      console.log(''Files for target deal:'', data?.length || 0);\n      if (data && data.length > 0) {\n        data.forEach((file, i) => {\n          console.log(\\`  ${i+1}. ${file.file_name} (uploaded: ${file.uploaded_at})\\`);\n        });\n      }\n    }\n    \n    // Test 3: Check if deal exists\n    console.log(''\\n3. Testing if deal exists...'');\n    return supabase\n      .from(''deals'')\n      .select(''id, user_id, title'')\n      .eq(''id'', ''66505930-39ed-4caf-ae0b-4a3ea1cc2b49'');\n  })\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''❌ Cannot access deals table:'', error);\n    } else {\n      console.log(''✅ Deals table accessible'');\n      if (data && data.length > 0) {\n        console.log(''Target deal found:'', data[0]);\n      } else {\n        console.log(''❌ Target deal NOT found'');\n      }\n    }\n    \n    console.log(''\\n=== TEST COMPLETED ==='');\n  })\n  .catch(err => {\n    console.error(''❌ Test failed with error:'', err);\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\nsupabase\n  .from(''deals'')\n  .select(''*'')\n  .eq(''id'', ''66505930-39ed-4caf-ae0b-4a3ea1cc2b49'')\n  .limit(1)\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''Error:'', error);\n    } else {\n      if (data && data.length > 0) {\n        console.log(''Deal found! Columns:'', Object.keys(data[0]));\n        console.log(''Deal data:'', data[0]);\n      } else {\n        console.log(''Deal not found or not accessible'');\n      }\n    }\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\nconsole.log(''Checking available deals...'');\nsupabase\n  .from(''deals'')\n  .select(''id, business_name, created_at'')\n  .order(''created_at'', { ascending: false })\n  .limit(5)\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''Error accessing deals:'', error);\n    } else {\n      console.log(''Available deals:'', data?.length || 0);\n      if (data && data.length > 0) {\n        data.forEach((deal, i) => {\n          console.log(\\`  ${i+1}. ${deal.id} - ${deal.business_name || ''No name''}\\`);\n        });\n      } else {\n        console.log(''No deals found'');\n      }\n    }\n  });\n\")",
      "Bash(VITE_SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" VITE_SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.VITE_SUPABASE_URL, process.env.VITE_SUPABASE_ANON_KEY);\n\nconsole.log(''Creating test deal...'');\nsupabase\n  .from(''deals'')\n  .insert({\n    id: ''66505930-39ed-4caf-ae0b-4a3ea1cc2b49'',\n    business_name: ''Test Business for File Upload'',\n    user_id: ''cf933bf0-9c7f-40ad-bc57-6d6456b92af9'', // User ID from server logs\n    description: ''Test deal created for file upload testing''\n  })\n  .select()\n  .then(({ data, error }) => {\n    if (error) {\n      console.error(''❌ Failed to create deal:'', error);\n    } else {\n      console.log(''✅ Deal created successfully:'', data);\n    }\n  });\n\")",
      "Bash(npm start)",
      "Bash(git restore:*)",
      "Bash(render config set:*)",
      "Bash(render --help)",
      "Bash(DATAFORSEO_USERNAME=\"tetrahedronglobal@gmail.com\" DATAFORSEO_PASSWORD=\"657d88542daef67e\" SUPABASE_URL=\"https://ueemtnohgkovwzodzxdr.supabase.co\" SUPABASE_ANON_KEY=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVlZW10bm9oZ2tvdnd6b2R6eGRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NjcyOTUsImV4cCI6MjA2NjQ0MzI5NX0.6_bLS2rSI-XsSwwVB5naQS7OYtyemtXvjn2y5MUM9xk\" node temp-seller-lookup.mjs)",
      "Bash(SERVER_PORT=3002 node scripts/sync-ports.js)",
      "Bash(awk:*)",
      "Bash(/Users/samwilhoit/CascadeProjects/biz-hunter-dashboard/scripts/add-render-env-vars-api.sh:*)",
      "WebFetch(domain:developer.junglescout.com)",
      "WebFetch(domain:support.junglescout.com)",
      "WebFetch(domain:docs.dataforseo.com)",
      "mcp__supabase__generate_typescript_types",
      "WebFetch(domain:localhost)",
      "WebFetch(domain:sandbox.dataforseo.com)",
      "Bash(nslookup:*)",
      "Bash(bq:*)",
      "Bash(--member=\"serviceAccount:bigquery-vercel@tetrahedron-366117.iam.gserviceaccount.com\" )",
      "Bash(--role=\"roles/bigquery.dataViewer\" )",
      "Bash(--condition=None)",
      "Bash(--member=\"serviceAccount:bigquery-vercel@tetrahedron-366117.iam.gserviceaccount.com\" )",
      "Bash(--role=\"roles/bigquery.jobUser\" )",
      "Bash(--iam-account=bigquery-vercel@tetrahedron-366117.iam.gserviceaccount.com)",
      "Bash(vercel:*)",
      "Bash(npx vercel ls:*)",
      "Bash(npx vercel alias:*)",
      "Bash(npx vercel:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(done)",
      "WebFetch(domain:biz-hunter-dashboard-1rr6my9j9-swilhoits-projects.vercel.app)",
      "WebFetch(domain:biz-hunter-dashboard.vercel.app)",
      "WebFetch(domain:biz-hunter-dashboard-80vziptlw-swilhoits-projects.vercel.app)",
      "WebFetch(domain:bizhunter.ai)",
      "Bash(firebase login:*)",
      "Bash(firebase projects:list:*)",
      "Bash(firebase deploy:*)",
      "Bash(firebase firestore:indexes:*)",
      "Bash(firebase apps:sdkconfig:*)",
      "Bash(firebase apps:create:*)",
      "Bash(./setup-vercel-env.sh:*)",
      "WebFetch(domain:biz-hunter-dashboard-kxcmjdg0d-swilhoits-projects.vercel.app)",
      "WebFetch(domain:biz-hunter-dashboard-mxd7eu5tk-swilhoits-projects.vercel.app)",
      "WebFetch(domain:biz-hunter-dashboard-67ddmbzw8-swilhoits-projects.vercel.app)",
      "Bash(firebase firestore:rules:*)",
      "WebFetch(domain:biz-hunter-dashboard-4m8p6lbk3-swilhoits-projects.vercel.app)",
      "WebFetch(domain:biz-hunter-dashboard-ty7v6jpqp-swilhoits-projects.vercel.app)",
      "Bash(./set-cors.sh:*)",
      "Bash(gsutil ls:*)",
      "Bash(firebase init:*)",
      "Bash(firebase projects:get:*)",
      "Bash(gsutil mb:*)",
      "Bash(gsutil cors get:*)",
      "Bash(git log:*)",
      "Bash(git ls-tree:*)"
    ],
    "deny": []
  }
}